<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
   <meta name="GENERATOR" content="Mozilla/4.73 [en] (WinNT; I) [Netscape]">
   <title>Readme file for the IAR XAR Library Builder V1.03C</title>
</head>
<body bgcolor="#FFDE00">

<h2>Readme file for the IAR XAR Library Builder V1.03C</h2>
<font size=-1>Updated: July 10, 2002 [IJYB]</font>
<br><font size=-1>Archived: $Revision: 1.6 $</font>

<ul>

<li><a href="xlink.htm">The IAR Universal Linker</a></li>

<li><a href="xman.htm">Manual Corrections and Updates</a></li>

<li><a href="#important">Important information</a></li>

<li><a href="#problems">Known Problems in Current Version</a></li>

<li><a href="#pcorr">Program Corrections and Updates</a></li>

<li><a href="#manual">The XAR online manual</a></li>
</ul>

</ul>

<h3><a NAME="important"></a>Important information</h3>
<ul>

<h4>XAR 1.03A - 2002-03-18</h4>
<ul>
<li>
     XAR, the IAR Universal Library Builder, is now included in the
     XLINK package. XAR has a very simple command line interface to
     construct library files from object files, which is likely to be
     far more convenient than using XLIB for the same purpose.
</li>
</ul>
</ul>

<h3><a NAME="problems"></a>Known problems in Current Version</h3>

<h4>XAR 1.03C - 2002-05-30</h4>

<ul>
  <li> There are currently no known problems.</li><p>
</ul>

<h3><a NAME="pcorr"></a>Program Corrections and Updates</h3>
<ul>
  <h4>XAR 1.03C - 2002-07-10</h4>
  <ul>
    <li> XAR can now read command files using the 
         <a href="#XARxoptions">-x option</a>. Everything in 
         the command file will be interpreted as if it was entered on the 
         command line. The main reason for this is that large libraries 
         sometimes requires so many files that they become larger than the 
	 buffer allocated by the process XAR is run from. Note that this is 
	 a limitation in the OS/shell, not a limitation in XAR. </li><p>

   <li> XAR now warns when it encounters the same input file more than once.
        This is almost certainly an error but XAR will allow you to build
	the library anyway.</li><p>
  </ul>
  <h4>XAR 1.03B - 2002-05-30</h4>
  <ul> 
    <li> XAR now handles empty infiles, this was considered an error earlier.
    </li><p>
  </ul>

  <h4>XAR 1.03A - 2002-03-18</h4>

  <ul>
    <li> This is the first public release of XAR so no problems are fixed.
    </li><p>
  </ul>
</ul>

<h3><a NAME="#manual">XAR manual</a></h3>

<ul>
  <b>Table of contents</b><p>
  <tt>[1.03A]&nbsp;</tt><a HREF="#XARUsage">Usage of XAR</a><br>
  <tt>[1.03C]&nbsp;</tt><a HREF="#XAROptions">XAR options</a><br>
  <tt>[1.03C]&nbsp;</tt><a HREF="#XARErrors">Error codes in XAR</a><br><p>
  
  <tt>
    <b><a NAME="#XARUsage"> Usage of XAR</a></b><p>
    Building libraries with XAR is quite simple, just type either: <br>
    xar <i>file1 file2 ... fileN</i> -o <i>lib</i><br>
    or<br>
    xar <i>lib file1 file2 ... fileN </i><br>
    This will make XAR create a library called lib that consists of the 
    files <i>file1</i> to <i>fileN</i>.<br><br>
    <b><a NAME="#XAROptions"> XAR options </a></b><p>
    Aside from -o XAR has the following options:<br><br> 
    <ul>
	 -S Silent operation, nothing is printed  if 
	    everything went well, this is the default setting for 
	    command line XAR.<p>
         -V Verbose, this prints the progress of XAR while it builds 
            libraries, this is the default setting for the XAR used by 
            the IAR Embedded Workbench.<p>
	 -x filename, this extends the command line with the contents 
	    of the file 'filename'. Everything encountered in the file 
	    will be interpreted as file names. Other options must still 
	    be entered on the command line. Newline is the only recognized 
	    delimiter, space is considered a part of the file name. This
	    means that everything entered on a single line is consiedered
	    to be a filename, no comments or other options are allowed.<p>
    </ul>
    <b><a NAME="#XARWarnings"> Warning codes in XAR</a></b><p>
    <dl>
        <dt> 0 File '<i>filename</i>' has already been added to the library
	</dt>
	<dd> The file was added to the library before the processing of this 
	     file. This is almost certainly an error as all symbols in the 
	     file will be multiply defined. </dd><p>
    </dl>

    <b><a NAME="#XARErrors"> Error codes in XAR</a></b><p>
    As simple as XAR is, sometimes something goes wrong. This is a list of 
    the possible errors that XAR detects:<p>
    <dl>
	<dt> 0 Not enough memory</dt>  
	<dd> XAR was unable to aquire the memory that it needed. </dd><p>

	<dt> 1 -o option requires an argument</dt>  
	<dd> XAR expects an argument after -o. </dd><p>

	<dt> 2 Unknown option '<i>option</i>'</dt>  
	<dd> XAR encountered an unknown option on the command line. </dd><p>

	<dt> 3 Too few arguments</dt>  
	<dd> XAR expects to find more arguments </dd><p>

	<dt> 4 Same file as both input and output: '<i>filename</i>'</dt>  
	<dd> One of the files is used as both input and output, 
	     as this would destroy an infile it is forbidden. If you really 
	     want to give the new library a name that is used by one of the 
	     infiles you will have to use a temporary file to build the 
	     library with XAR and rename that temporary file to the name 
	     you want afterwards.</dd><p>

	<dt> 5 Can't open library file '<i>filename</i>' for writing</dt>  
	<dd> XAR was unable to open the library file for writing, the 
	     most probable explanation for this is that the library file 
	     is write protected.</dd><p>

	<dt> 6 Can't open object file '<i>filename</i>'</dt>  
	<dd> XAR was unable to open the object file, the most probable 
	     explanation for this is that the file does not exist. </dd><p>

	<dt> 7 Error occured while writing to library file</dt>  
	<dd> An error ocurred while XAR was writing to the file. </dd><p>

	<dt> 8 '<i>filename</i>' is not a valid UBROF file</dt>  
	<dd> The file is not a valid UBROF file.</dd><p>

	<dt> 9 Error occured while reading from '<i>filename</i>'</dt>  
	<dd> An error ocurred while XAR was reading the file.</dd><p>

	<dt> 10 Error occured while closing '<i>filename</i>'</dt>  
	<dd> An error ocurred while XAR was closing the file. </dd><p>

	<dt> 11 XAR didn't find any bytes to read, is '<i>filename</i>' 
	     empty ?</dt>  
	<dd> The object file seems to be empty. Note that this error 
	     only can occur in older versions of XAR.</dd><p>

	<dt> 12 '<i>filename</i>' didn't end as a valid UBROF file
	     should</dt> 
        <dd> The file did not end as a UBROF file is supposed to end.  
             Either the file is corrupt or the assembler / compiler 
             produces corrupt output.</dd><p>

	<dt> 13 XAR can't fseek in library file </dt>  
	<dd> The call to fseek failed.</dd><p>

	<dt> 14 -x option requires an argument </dt>
	<dd> You need to specify an argument for the -x option</dd><p>

    </dl>
    Note: XAR does not distinguish between UBROF for different processors,
    as far as it is concerned a UBROF file is a UBROF file and if a user
    wants to build a library consisting of files from two different cpu:s
    it allows it.<p>
</tt>
</ul>